Terminals unused in grammar

   LIBRARY


Grammar

    0 $accept: hashinclude $end

    1 primary_expression: IDENTIFIER
    2                   | CHAR_CONSTANT
    3                   | FLOAT_CONSTANT
    4                   | CONSTANT
    5                   | INT_CONSTANT
    6                   | STRING_LITERAL
    7                   | '(' expression ')'

    8 postfix_expression: primary_expression
    9                   | postfix_expression '[' expression ']'
   10                   | postfix_expression '(' ')'
   11                   | postfix_expression '(' argument_expression_list ')'
   12                   | postfix_expression '.' IDENTIFIER
   13                   | postfix_expression INC_OP
   14                   | postfix_expression DEC_OP

   15 argument_expression_list: assignment_expression
   16                         | argument_expression_list ',' assignment_expression

   17 unary_expression: postfix_expression
   18                 | INC_OP unary_expression
   19                 | DEC_OP unary_expression
   20                 | unary_operator unary_expression
   21                 | SIZEOF unary_expression
   22                 | SIZEOF '(' type_specifier ')'

   23 unary_operator: '&'
   24               | '*'
   25               | '+'
   26               | '-'
   27               | '~'
   28               | '!'

   29 multiplicative_expression: unary_expression
   30                          | multiplicative_expression '*' unary_expression
   31                          | multiplicative_expression '/' unary_expression
   32                          | multiplicative_expression '%' unary_expression

   33 additive_expression: multiplicative_expression
   34                    | additive_expression '+' multiplicative_expression
   35                    | additive_expression '-' multiplicative_expression

   36 relational_expression: additive_expression
   37                      | relational_expression '<' additive_expression
   38                      | relational_expression '>' additive_expression
   39                      | relational_expression LE_OP additive_expression
   40                      | relational_expression GE_OP additive_expression

   41 equality_expression: relational_expression
   42                    | equality_expression EQ_OP relational_expression
   43                    | equality_expression NE_OP relational_expression

   44 logical_and_expression: equality_expression
   45                       | logical_and_expression AND_OP equality_expression

   46 logical_or_expression: logical_and_expression
   47                      | logical_or_expression OR_OP logical_and_expression

   48 conditional_expression: logical_or_expression
   49                       | logical_or_expression '?' expression ':' conditional_expression

   50 assignment_expression: conditional_expression
   51                      | unary_expression assignment_operator assignment_expression

   52 assignment_operator: '='
   53                    | MUL_ASSIGN
   54                    | DIV_ASSIGN
   55                    | MOD_ASSIGN
   56                    | ADD_ASSIGN
   57                    | SUB_ASSIGN

   58 expression: assignment_expression
   59           | expression ',' assignment_expression

   60 parameter_list: parameter_declaration
   61               | parameter_list ',' parameter_declaration

   62 parameter_declaration: type_specifier declarator
   63                      | type_specifier

   64 identifier_list: IDENTIFIER
   65                | identifier_list ',' IDENTIFIER

   66 initializer: assignment_expression
   67            | '{' initializer_list '}'
   68            | '{' initializer_list ',' '}'

   69 initializer_list: initializer
   70                 | initializer_list ',' initializer

   71 statement: compound_statement
   72          | expression_statement
   73          | selection_statement
   74          | iteration_statement
   75          | jump_statement
   76          | declaration

   77 $@1: %empty

   78 compound_statement: $@1 compound_statement_types

   79 compound_statement_types: '{' '}'
   80                         | '{' statement_list '}'

   81 declaration: type_specifier init_declarator_list ';'

   82 init_declarator_list: init_declarator
   83                     | init_declarator_list ',' init_declarator

   84 init_declarator: declarator
   85                | declarator '=' initializer

   86 type_specifier: VOID
   87               | CHAR
   88               | SHORT
   89               | INT
   90               | LONG
   91               | FLOAT
   92               | DOUBLE

   93 declarator: IDENTIFIER
   94           | declarator '[' INT_CONSTANT ']'
   95           | declarator '(' parameter_list ')'
   96           | declarator '(' identifier_list ')'
   97           | declarator '(' ')'

   98 statement_list: statement
   99               | statement_list statement

  100 expression_statement: ';'
  101                     | expression ';'

  102 selection_statement: IF '(' expression ')' M compound_statement

  103 $@2: %empty

  104 selection_statement: IF '(' expression ')' M compound_statement ELSE $@2 compound_statement

  105 M: %empty

  106 $@3: %empty

  107 $@4: %empty

  108 iteration_statement: WHILE $@3 '(' expression ')' whileM $@4 compound_statement

  109 $@5: %empty

  110 iteration_statement: DO $@5 compound_statement WHILE '(' expression ')' ';'

  111 whileM: %empty

  112 jump_statement: CONTINUE ';'
  113               | BREAK ';'
  114               | RETURN ';'
  115               | RETURN expression ';'

  116 hashinclude: HASH INCLUDE '<' IDENTIFIER '.' H '>' hashinclude
  117            | translation_unit

  118 translation_unit: external_declaration
  119                 | translation_unit external_declaration

  120 external_declaration: function_definition
  121                     | declaration

  122 $@6: %empty

  123 function_definition: type_specifier declarator compound_statement $@6
  124                    | declarator declaration compound_statement
  125                    | declarator compound_statement


Terminals, with rules where they appear

$end (0) 0
'!' (33) 28
'%' (37) 32
'&' (38) 23
'(' (40) 7 10 11 22 95 96 97 102 104 108 110
')' (41) 7 10 11 22 95 96 97 102 104 108 110
'*' (42) 24 30
'+' (43) 25 34
',' (44) 16 59 61 65 68 70 83
'-' (45) 26 35
'.' (46) 12 116
'/' (47) 31
':' (58) 49
';' (59) 81 100 101 110 112 113 114 115
'<' (60) 37 116
'=' (61) 52 85
'>' (62) 38 116
'?' (63) 49
'[' (91) 9 94
']' (93) 9 94
'{' (123) 67 68 79 80
'}' (125) 67 68 79 80
'~' (126) 27
error (256)
IDENTIFIER (258) 1 12 64 65 93 116
CONSTANT (259) 4
CHAR_CONSTANT (260) 2
INT_CONSTANT (261) 5 94
FLOAT_CONSTANT (262) 3
STRING_LITERAL (263) 6
SIZEOF (264) 21 22
INC_OP (265) 13 18
DEC_OP (266) 14 19
LE_OP (267) 39
GE_OP (268) 40
EQ_OP (269) 42
NE_OP (270) 43
H (271) 116
AND_OP (272) 45
OR_OP (273) 47
MUL_ASSIGN (274) 53
DIV_ASSIGN (275) 54
MOD_ASSIGN (276) 55
ADD_ASSIGN (277) 56
SUB_ASSIGN (278) 57
CHAR (279) 87
SHORT (280) 88
INT (281) 89
LONG (282) 90
FLOAT (283) 91
DOUBLE (284) 92
VOID (285) 86
IF (286) 102 104
ELSE (287) 104
WHILE (288) 108 110
DO (289) 110
CONTINUE (290) 112
BREAK (291) 113
RETURN (292) 114 115
HASH (293) 116
INCLUDE (294) 116
LIBRARY (295)


Nonterminals, with rules where they appear

$accept (63)
    on left: 0
primary_expression (64)
    on left: 1 2 3 4 5 6 7, on right: 8
postfix_expression (65)
    on left: 8 9 10 11 12 13 14, on right: 9 10 11 12 13 14 17
argument_expression_list (66)
    on left: 15 16, on right: 11 16
unary_expression (67)
    on left: 17 18 19 20 21 22, on right: 18 19 20 21 29 30 31 32 51
unary_operator (68)
    on left: 23 24 25 26 27 28, on right: 20
multiplicative_expression (69)
    on left: 29 30 31 32, on right: 30 31 32 33 34 35
additive_expression (70)
    on left: 33 34 35, on right: 34 35 36 37 38 39 40
relational_expression (71)
    on left: 36 37 38 39 40, on right: 37 38 39 40 41 42 43
equality_expression (72)
    on left: 41 42 43, on right: 42 43 44 45
logical_and_expression (73)
    on left: 44 45, on right: 45 46 47
logical_or_expression (74)
    on left: 46 47, on right: 47 48 49
conditional_expression (75)
    on left: 48 49, on right: 49 50
assignment_expression (76)
    on left: 50 51, on right: 15 16 51 58 59 66
assignment_operator (77)
    on left: 52 53 54 55 56 57, on right: 51
expression (78)
    on left: 58 59, on right: 7 9 49 59 101 102 104 108 110 115
parameter_list (79)
    on left: 60 61, on right: 61 95
parameter_declaration (80)
    on left: 62 63, on right: 60 61
identifier_list (81)
    on left: 64 65, on right: 65 96
initializer (82)
    on left: 66 67 68, on right: 69 70 85
initializer_list (83)
    on left: 69 70, on right: 67 68 70
statement (84)
    on left: 71 72 73 74 75 76, on right: 98 99
compound_statement (85)
    on left: 78, on right: 71 102 104 108 110 123 124 125
$@1 (86)
    on left: 77, on right: 78
compound_statement_types (87)
    on left: 79 80, on right: 78
declaration (88)
    on left: 81, on right: 76 121 124
init_declarator_list (89)
    on left: 82 83, on right: 81 83
init_declarator (90)
    on left: 84 85, on right: 82 83
type_specifier (91)
    on left: 86 87 88 89 90 91 92, on right: 22 62 63 81 123
declarator (92)
    on left: 93 94 95 96 97, on right: 62 84 85 94 95 96 97 123 124
    125
statement_list (93)
    on left: 98 99, on right: 80 99
expression_statement (94)
    on left: 100 101, on right: 72
selection_statement (95)
    on left: 102 104, on right: 73
$@2 (96)
    on left: 103, on right: 104
M (97)
    on left: 105, on right: 102 104
iteration_statement (98)
    on left: 108 110, on right: 74
$@3 (99)
    on left: 106, on right: 108
$@4 (100)
    on left: 107, on right: 108
$@5 (101)
    on left: 109, on right: 110
whileM (102)
    on left: 111, on right: 108
jump_statement (103)
    on left: 112 113 114 115, on right: 75
hashinclude (104)
    on left: 116 117, on right: 0 116
translation_unit (105)
    on left: 118 119, on right: 117 119
external_declaration (106)
    on left: 120 121, on right: 118 119
function_definition (107)
    on left: 123 124 125, on right: 120
$@6 (108)
    on left: 122, on right: 123


State 0

    0 $accept: . hashinclude $end

    IDENTIFIER  shift, and go to state 1
    CHAR        shift, and go to state 2
    SHORT       shift, and go to state 3
    INT         shift, and go to state 4
    LONG        shift, and go to state 5
    FLOAT       shift, and go to state 6
    DOUBLE      shift, and go to state 7
    VOID        shift, and go to state 8
    HASH        shift, and go to state 9

    declaration           go to state 10
    type_specifier        go to state 11
    declarator            go to state 12
    hashinclude           go to state 13
    translation_unit      go to state 14
    external_declaration  go to state 15
    function_definition   go to state 16


State 1

   93 declarator: IDENTIFIER .

    $default  reduce using rule 93 (declarator)


State 2

   87 type_specifier: CHAR .

    $default  reduce using rule 87 (type_specifier)


State 3

   88 type_specifier: SHORT .

    $default  reduce using rule 88 (type_specifier)


State 4

   89 type_specifier: INT .

    $default  reduce using rule 89 (type_specifier)


State 5

   90 type_specifier: LONG .

    $default  reduce using rule 90 (type_specifier)


State 6

   91 type_specifier: FLOAT .

    $default  reduce using rule 91 (type_specifier)


State 7

   92 type_specifier: DOUBLE .

    $default  reduce using rule 92 (type_specifier)


State 8

   86 type_specifier: VOID .

    $default  reduce using rule 86 (type_specifier)


State 9

  116 hashinclude: HASH . INCLUDE '<' IDENTIFIER '.' H '>' hashinclude

    INCLUDE  shift, and go to state 17


State 10

  121 external_declaration: declaration .

    $default  reduce using rule 121 (external_declaration)


State 11

   81 declaration: type_specifier . init_declarator_list ';'
  123 function_definition: type_specifier . declarator compound_statement $@6

    IDENTIFIER  shift, and go to state 1

    init_declarator_list  go to state 18
    init_declarator       go to state 19
    declarator            go to state 20


State 12

   94 declarator: declarator . '[' INT_CONSTANT ']'
   95           | declarator . '(' parameter_list ')'
   96           | declarator . '(' identifier_list ')'
   97           | declarator . '(' ')'
  124 function_definition: declarator . declaration compound_statement
  125                    | declarator . compound_statement

    CHAR    shift, and go to state 2
    SHORT   shift, and go to state 3
    INT     shift, and go to state 4
    LONG    shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    VOID    shift, and go to state 8
    '('     shift, and go to state 21
    '['     shift, and go to state 22

    $default  reduce using rule 77 ($@1)

    compound_statement  go to state 23
    $@1                 go to state 24
    declaration         go to state 25
    type_specifier      go to state 26


State 13

    0 $accept: hashinclude . $end

    $end  shift, and go to state 27


State 14

  117 hashinclude: translation_unit .
  119 translation_unit: translation_unit . external_declaration

    IDENTIFIER  shift, and go to state 1
    CHAR        shift, and go to state 2
    SHORT       shift, and go to state 3
    INT         shift, and go to state 4
    LONG        shift, and go to state 5
    FLOAT       shift, and go to state 6
    DOUBLE      shift, and go to state 7
    VOID        shift, and go to state 8

    $default  reduce using rule 117 (hashinclude)

    declaration           go to state 10
    type_specifier        go to state 11
    declarator            go to state 12
    external_declaration  go to state 28
    function_definition   go to state 16


State 15

  118 translation_unit: external_declaration .

    $default  reduce using rule 118 (translation_unit)


State 16

  120 external_declaration: function_definition .

    $default  reduce using rule 120 (external_declaration)


State 17

  116 hashinclude: HASH INCLUDE . '<' IDENTIFIER '.' H '>' hashinclude

    '<'  shift, and go to state 29


State 18

   81 declaration: type_specifier init_declarator_list . ';'
   83 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 30
    ';'  shift, and go to state 31


State 19

   82 init_declarator_list: init_declarator .

    $default  reduce using rule 82 (init_declarator_list)


State 20

   84 init_declarator: declarator .
   85                | declarator . '=' initializer
   94 declarator: declarator . '[' INT_CONSTANT ']'
   95           | declarator . '(' parameter_list ')'
   96           | declarator . '(' identifier_list ')'
   97           | declarator . '(' ')'
  123 function_definition: type_specifier declarator . compound_statement $@6

    '('  shift, and go to state 21
    '['  shift, and go to state 22
    '='  shift, and go to state 32

    '{'       reduce using rule 77 ($@1)
    $default  reduce using rule 84 (init_declarator)

    compound_statement  go to state 33
    $@1                 go to state 24


State 21

   95 declarator: declarator '(' . parameter_list ')'
   96           | declarator '(' . identifier_list ')'
   97           | declarator '(' . ')'

    IDENTIFIER  shift, and go to state 34
    CHAR        shift, and go to state 2
    SHORT       shift, and go to state 3
    INT         shift, and go to state 4
    LONG        shift, and go to state 5
    FLOAT       shift, and go to state 6
    DOUBLE      shift, and go to state 7
    VOID        shift, and go to state 8
    ')'         shift, and go to state 35

    parameter_list         go to state 36
    parameter_declaration  go to state 37
    identifier_list        go to state 38
    type_specifier         go to state 39


State 22

   94 declarator: declarator '[' . INT_CONSTANT ']'

    INT_CONSTANT  shift, and go to state 40


State 23

  125 function_definition: declarator compound_statement .

    $default  reduce using rule 125 (function_definition)


State 24

   78 compound_statement: $@1 . compound_statement_types

    '{'  shift, and go to state 41

    compound_statement_types  go to state 42


State 25

  124 function_definition: declarator declaration . compound_statement

    $default  reduce using rule 77 ($@1)

    compound_statement  go to state 43
    $@1                 go to state 24


State 26

   81 declaration: type_specifier . init_declarator_list ';'

    IDENTIFIER  shift, and go to state 1

    init_declarator_list  go to state 18
    init_declarator       go to state 19
    declarator            go to state 44


State 27

    0 $accept: hashinclude $end .

    $default  accept


State 28

  119 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 119 (translation_unit)


State 29

  116 hashinclude: HASH INCLUDE '<' . IDENTIFIER '.' H '>' hashinclude

    IDENTIFIER  shift, and go to state 45


State 30

   83 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER  shift, and go to state 1

    init_declarator  go to state 46
    declarator       go to state 44


State 31

   81 declaration: type_specifier init_declarator_list ';' .

    $default  reduce using rule 81 (declaration)


State 32

   85 init_declarator: declarator '=' . initializer

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62
    '{'             shift, and go to state 63

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 66
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    relational_expression      go to state 70
    equality_expression        go to state 71
    logical_and_expression     go to state 72
    logical_or_expression      go to state 73
    conditional_expression     go to state 74
    assignment_expression      go to state 75
    initializer                go to state 76


State 33

  123 function_definition: type_specifier declarator compound_statement . $@6

    $default  reduce using rule 122 ($@6)

    $@6  go to state 77


State 34

   64 identifier_list: IDENTIFIER .

    $default  reduce using rule 64 (identifier_list)


State 35

   97 declarator: declarator '(' ')' .

    $default  reduce using rule 97 (declarator)


State 36

   61 parameter_list: parameter_list . ',' parameter_declaration
   95 declarator: declarator '(' parameter_list . ')'

    ')'  shift, and go to state 78
    ','  shift, and go to state 79


State 37

   60 parameter_list: parameter_declaration .

    $default  reduce using rule 60 (parameter_list)


State 38

   65 identifier_list: identifier_list . ',' IDENTIFIER
   96 declarator: declarator '(' identifier_list . ')'

    ')'  shift, and go to state 80
    ','  shift, and go to state 81


State 39

   62 parameter_declaration: type_specifier . declarator
   63                      | type_specifier .

    IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 63 (parameter_declaration)

    declarator  go to state 82


State 40

   94 declarator: declarator '[' INT_CONSTANT . ']'

    ']'  shift, and go to state 83


State 41

   79 compound_statement_types: '{' . '}'
   80                         | '{' . statement_list '}'

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    CHAR            shift, and go to state 2
    SHORT           shift, and go to state 3
    INT             shift, and go to state 4
    LONG            shift, and go to state 5
    FLOAT           shift, and go to state 6
    DOUBLE          shift, and go to state 7
    VOID            shift, and go to state 8
    IF              shift, and go to state 84
    WHILE           shift, and go to state 85
    DO              shift, and go to state 86
    CONTINUE        shift, and go to state 87
    BREAK           shift, and go to state 88
    RETURN          shift, and go to state 89
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62
    '}'             shift, and go to state 90
    ';'             shift, and go to state 91

    $default  reduce using rule 77 ($@1)

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 66
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    relational_expression      go to state 70
    equality_expression        go to state 71
    logical_and_expression     go to state 72
    logical_or_expression      go to state 73
    conditional_expression     go to state 74
    assignment_expression      go to state 92
    expression                 go to state 93
    statement                  go to state 94
    compound_statement         go to state 95
    $@1                        go to state 24
    declaration                go to state 96
    type_specifier             go to state 26
    statement_list             go to state 97
    expression_statement       go to state 98
    selection_statement        go to state 99
    iteration_statement        go to state 100
    jump_statement             go to state 101


State 42

   78 compound_statement: $@1 compound_statement_types .

    $default  reduce using rule 78 (compound_statement)


State 43

  124 function_definition: declarator declaration compound_statement .

    $default  reduce using rule 124 (function_definition)


State 44

   84 init_declarator: declarator .
   85                | declarator . '=' initializer
   94 declarator: declarator . '[' INT_CONSTANT ']'
   95           | declarator . '(' parameter_list ')'
   96           | declarator . '(' identifier_list ')'
   97           | declarator . '(' ')'

    '('  shift, and go to state 21
    '['  shift, and go to state 22
    '='  shift, and go to state 32

    $default  reduce using rule 84 (init_declarator)


State 45

  116 hashinclude: HASH INCLUDE '<' IDENTIFIER . '.' H '>' hashinclude

    '.'  shift, and go to state 102


State 46

   83 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 83 (init_declarator_list)


State 47

    1 primary_expression: IDENTIFIER .

    $default  reduce using rule 1 (primary_expression)


State 48

    4 primary_expression: CONSTANT .

    $default  reduce using rule 4 (primary_expression)


State 49

    2 primary_expression: CHAR_CONSTANT .

    $default  reduce using rule 2 (primary_expression)


State 50

    5 primary_expression: INT_CONSTANT .

    $default  reduce using rule 5 (primary_expression)


State 51

    3 primary_expression: FLOAT_CONSTANT .

    $default  reduce using rule 3 (primary_expression)


State 52

    6 primary_expression: STRING_LITERAL .

    $default  reduce using rule 6 (primary_expression)


State 53

   21 unary_expression: SIZEOF . unary_expression
   22                 | SIZEOF . '(' type_specifier ')'

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 103
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression  go to state 64
    postfix_expression  go to state 65
    unary_expression    go to state 104
    unary_operator      go to state 67


State 54

   18 unary_expression: INC_OP . unary_expression

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression  go to state 64
    postfix_expression  go to state 65
    unary_expression    go to state 105
    unary_operator      go to state 67


State 55

   19 unary_expression: DEC_OP . unary_expression

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression  go to state 64
    postfix_expression  go to state 65
    unary_expression    go to state 106
    unary_operator      go to state 67


State 56

    7 primary_expression: '(' . expression ')'

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 66
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    relational_expression      go to state 70
    equality_expression        go to state 71
    logical_and_expression     go to state 72
    logical_or_expression      go to state 73
    conditional_expression     go to state 74
    assignment_expression      go to state 92
    expression                 go to state 107


State 57

   23 unary_operator: '&' .

    $default  reduce using rule 23 (unary_operator)


State 58

   24 unary_operator: '*' .

    $default  reduce using rule 24 (unary_operator)


State 59

   25 unary_operator: '+' .

    $default  reduce using rule 25 (unary_operator)


State 60

   26 unary_operator: '-' .

    $default  reduce using rule 26 (unary_operator)


State 61

   27 unary_operator: '~' .

    $default  reduce using rule 27 (unary_operator)


State 62

   28 unary_operator: '!' .

    $default  reduce using rule 28 (unary_operator)


State 63

   67 initializer: '{' . initializer_list '}'
   68            | '{' . initializer_list ',' '}'

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62
    '{'             shift, and go to state 63

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 66
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    relational_expression      go to state 70
    equality_expression        go to state 71
    logical_and_expression     go to state 72
    logical_or_expression      go to state 73
    conditional_expression     go to state 74
    assignment_expression      go to state 75
    initializer                go to state 108
    initializer_list           go to state 109


State 64

    8 postfix_expression: primary_expression .

    $default  reduce using rule 8 (postfix_expression)


State 65

    9 postfix_expression: postfix_expression . '[' expression ']'
   10                   | postfix_expression . '(' ')'
   11                   | postfix_expression . '(' argument_expression_list ')'
   12                   | postfix_expression . '.' IDENTIFIER
   13                   | postfix_expression . INC_OP
   14                   | postfix_expression . DEC_OP
   17 unary_expression: postfix_expression .

    INC_OP  shift, and go to state 110
    DEC_OP  shift, and go to state 111
    '('     shift, and go to state 112
    '['     shift, and go to state 113
    '.'     shift, and go to state 114

    $default  reduce using rule 17 (unary_expression)


State 66

   29 multiplicative_expression: unary_expression .
   51 assignment_expression: unary_expression . assignment_operator assignment_expression

    MUL_ASSIGN  shift, and go to state 115
    DIV_ASSIGN  shift, and go to state 116
    MOD_ASSIGN  shift, and go to state 117
    ADD_ASSIGN  shift, and go to state 118
    SUB_ASSIGN  shift, and go to state 119
    '='         shift, and go to state 120

    $default  reduce using rule 29 (multiplicative_expression)

    assignment_operator  go to state 121


State 67

   20 unary_expression: unary_operator . unary_expression

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression  go to state 64
    postfix_expression  go to state 65
    unary_expression    go to state 122
    unary_operator      go to state 67


State 68

   30 multiplicative_expression: multiplicative_expression . '*' unary_expression
   31                          | multiplicative_expression . '/' unary_expression
   32                          | multiplicative_expression . '%' unary_expression
   33 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 123
    '/'  shift, and go to state 124
    '%'  shift, and go to state 125

    $default  reduce using rule 33 (additive_expression)


State 69

   34 additive_expression: additive_expression . '+' multiplicative_expression
   35                    | additive_expression . '-' multiplicative_expression
   36 relational_expression: additive_expression .

    '+'  shift, and go to state 126
    '-'  shift, and go to state 127

    $default  reduce using rule 36 (relational_expression)


State 70

   37 relational_expression: relational_expression . '<' additive_expression
   38                      | relational_expression . '>' additive_expression
   39                      | relational_expression . LE_OP additive_expression
   40                      | relational_expression . GE_OP additive_expression
   41 equality_expression: relational_expression .

    LE_OP  shift, and go to state 128
    GE_OP  shift, and go to state 129
    '<'    shift, and go to state 130
    '>'    shift, and go to state 131

    $default  reduce using rule 41 (equality_expression)


State 71

   42 equality_expression: equality_expression . EQ_OP relational_expression
   43                    | equality_expression . NE_OP relational_expression
   44 logical_and_expression: equality_expression .

    EQ_OP  shift, and go to state 132
    NE_OP  shift, and go to state 133

    $default  reduce using rule 44 (logical_and_expression)


State 72

   45 logical_and_expression: logical_and_expression . AND_OP equality_expression
   46 logical_or_expression: logical_and_expression .

    AND_OP  shift, and go to state 134

    $default  reduce using rule 46 (logical_or_expression)


State 73

   47 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
   48 conditional_expression: logical_or_expression .
   49                       | logical_or_expression . '?' expression ':' conditional_expression

    OR_OP  shift, and go to state 135
    '?'    shift, and go to state 136

    $default  reduce using rule 48 (conditional_expression)


State 74

   50 assignment_expression: conditional_expression .

    $default  reduce using rule 50 (assignment_expression)


State 75

   66 initializer: assignment_expression .

    $default  reduce using rule 66 (initializer)


State 76

   85 init_declarator: declarator '=' initializer .

    $default  reduce using rule 85 (init_declarator)


State 77

  123 function_definition: type_specifier declarator compound_statement $@6 .

    $default  reduce using rule 123 (function_definition)


State 78

   95 declarator: declarator '(' parameter_list ')' .

    $default  reduce using rule 95 (declarator)


State 79

   61 parameter_list: parameter_list ',' . parameter_declaration

    CHAR    shift, and go to state 2
    SHORT   shift, and go to state 3
    INT     shift, and go to state 4
    LONG    shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    VOID    shift, and go to state 8

    parameter_declaration  go to state 137
    type_specifier         go to state 39


State 80

   96 declarator: declarator '(' identifier_list ')' .

    $default  reduce using rule 96 (declarator)


State 81

   65 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 138


State 82

   62 parameter_declaration: type_specifier declarator .
   94 declarator: declarator . '[' INT_CONSTANT ']'
   95           | declarator . '(' parameter_list ')'
   96           | declarator . '(' identifier_list ')'
   97           | declarator . '(' ')'

    '('  shift, and go to state 21
    '['  shift, and go to state 22

    $default  reduce using rule 62 (parameter_declaration)


State 83

   94 declarator: declarator '[' INT_CONSTANT ']' .

    $default  reduce using rule 94 (declarator)


State 84

  102 selection_statement: IF . '(' expression ')' M compound_statement
  104                    | IF . '(' expression ')' M compound_statement ELSE $@2 compound_statement

    '('  shift, and go to state 139


State 85

  108 iteration_statement: WHILE . $@3 '(' expression ')' whileM $@4 compound_statement

    $default  reduce using rule 106 ($@3)

    $@3  go to state 140


State 86

  110 iteration_statement: DO . $@5 compound_statement WHILE '(' expression ')' ';'

    $default  reduce using rule 109 ($@5)

    $@5  go to state 141


State 87

  112 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 142


State 88

  113 jump_statement: BREAK . ';'

    ';'  shift, and go to state 143


State 89

  114 jump_statement: RETURN . ';'
  115               | RETURN . expression ';'

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62
    ';'             shift, and go to state 144

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 66
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    relational_expression      go to state 70
    equality_expression        go to state 71
    logical_and_expression     go to state 72
    logical_or_expression      go to state 73
    conditional_expression     go to state 74
    assignment_expression      go to state 92
    expression                 go to state 145


State 90

   79 compound_statement_types: '{' '}' .

    $default  reduce using rule 79 (compound_statement_types)


State 91

  100 expression_statement: ';' .

    $default  reduce using rule 100 (expression_statement)


State 92

   58 expression: assignment_expression .

    $default  reduce using rule 58 (expression)


State 93

   59 expression: expression . ',' assignment_expression
  101 expression_statement: expression . ';'

    ','  shift, and go to state 146
    ';'  shift, and go to state 147


State 94

   98 statement_list: statement .

    $default  reduce using rule 98 (statement_list)


State 95

   71 statement: compound_statement .

    $default  reduce using rule 71 (statement)


State 96

   76 statement: declaration .

    $default  reduce using rule 76 (statement)


State 97

   80 compound_statement_types: '{' statement_list . '}'
   99 statement_list: statement_list . statement

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    CHAR            shift, and go to state 2
    SHORT           shift, and go to state 3
    INT             shift, and go to state 4
    LONG            shift, and go to state 5
    FLOAT           shift, and go to state 6
    DOUBLE          shift, and go to state 7
    VOID            shift, and go to state 8
    IF              shift, and go to state 84
    WHILE           shift, and go to state 85
    DO              shift, and go to state 86
    CONTINUE        shift, and go to state 87
    BREAK           shift, and go to state 88
    RETURN          shift, and go to state 89
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62
    '}'             shift, and go to state 148
    ';'             shift, and go to state 91

    $default  reduce using rule 77 ($@1)

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 66
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    relational_expression      go to state 70
    equality_expression        go to state 71
    logical_and_expression     go to state 72
    logical_or_expression      go to state 73
    conditional_expression     go to state 74
    assignment_expression      go to state 92
    expression                 go to state 93
    statement                  go to state 149
    compound_statement         go to state 95
    $@1                        go to state 24
    declaration                go to state 96
    type_specifier             go to state 26
    expression_statement       go to state 98
    selection_statement        go to state 99
    iteration_statement        go to state 100
    jump_statement             go to state 101


State 98

   72 statement: expression_statement .

    $default  reduce using rule 72 (statement)


State 99

   73 statement: selection_statement .

    $default  reduce using rule 73 (statement)


State 100

   74 statement: iteration_statement .

    $default  reduce using rule 74 (statement)


State 101

   75 statement: jump_statement .

    $default  reduce using rule 75 (statement)


State 102

  116 hashinclude: HASH INCLUDE '<' IDENTIFIER '.' . H '>' hashinclude

    H  shift, and go to state 150


State 103

    7 primary_expression: '(' . expression ')'
   22 unary_expression: SIZEOF '(' . type_specifier ')'

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    CHAR            shift, and go to state 2
    SHORT           shift, and go to state 3
    INT             shift, and go to state 4
    LONG            shift, and go to state 5
    FLOAT           shift, and go to state 6
    DOUBLE          shift, and go to state 7
    VOID            shift, and go to state 8
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 66
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    relational_expression      go to state 70
    equality_expression        go to state 71
    logical_and_expression     go to state 72
    logical_or_expression      go to state 73
    conditional_expression     go to state 74
    assignment_expression      go to state 92
    expression                 go to state 107
    type_specifier             go to state 151


State 104

   21 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 21 (unary_expression)


State 105

   18 unary_expression: INC_OP unary_expression .

    $default  reduce using rule 18 (unary_expression)


State 106

   19 unary_expression: DEC_OP unary_expression .

    $default  reduce using rule 19 (unary_expression)


State 107

    7 primary_expression: '(' expression . ')'
   59 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 152
    ','  shift, and go to state 146


State 108

   69 initializer_list: initializer .

    $default  reduce using rule 69 (initializer_list)


State 109

   67 initializer: '{' initializer_list . '}'
   68            | '{' initializer_list . ',' '}'
   70 initializer_list: initializer_list . ',' initializer

    ','  shift, and go to state 153
    '}'  shift, and go to state 154


State 110

   13 postfix_expression: postfix_expression INC_OP .

    $default  reduce using rule 13 (postfix_expression)


State 111

   14 postfix_expression: postfix_expression DEC_OP .

    $default  reduce using rule 14 (postfix_expression)


State 112

   10 postfix_expression: postfix_expression '(' . ')'
   11                   | postfix_expression '(' . argument_expression_list ')'

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    ')'             shift, and go to state 155
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression         go to state 64
    postfix_expression         go to state 65
    argument_expression_list   go to state 156
    unary_expression           go to state 66
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    relational_expression      go to state 70
    equality_expression        go to state 71
    logical_and_expression     go to state 72
    logical_or_expression      go to state 73
    conditional_expression     go to state 74
    assignment_expression      go to state 157


State 113

    9 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 66
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    relational_expression      go to state 70
    equality_expression        go to state 71
    logical_and_expression     go to state 72
    logical_or_expression      go to state 73
    conditional_expression     go to state 74
    assignment_expression      go to state 92
    expression                 go to state 158


State 114

   12 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 159


State 115

   53 assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 53 (assignment_operator)


State 116

   54 assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 54 (assignment_operator)


State 117

   55 assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 55 (assignment_operator)


State 118

   56 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 56 (assignment_operator)


State 119

   57 assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 57 (assignment_operator)


State 120

   52 assignment_operator: '=' .

    $default  reduce using rule 52 (assignment_operator)


State 121

   51 assignment_expression: unary_expression assignment_operator . assignment_expression

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 66
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    relational_expression      go to state 70
    equality_expression        go to state 71
    logical_and_expression     go to state 72
    logical_or_expression      go to state 73
    conditional_expression     go to state 74
    assignment_expression      go to state 160


State 122

   20 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 20 (unary_expression)


State 123

   30 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression  go to state 64
    postfix_expression  go to state 65
    unary_expression    go to state 161
    unary_operator      go to state 67


State 124

   31 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression  go to state 64
    postfix_expression  go to state 65
    unary_expression    go to state 162
    unary_operator      go to state 67


State 125

   32 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression  go to state 64
    postfix_expression  go to state 65
    unary_expression    go to state 163
    unary_operator      go to state 67


State 126

   34 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 164
    unary_operator             go to state 67
    multiplicative_expression  go to state 165


State 127

   35 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 164
    unary_operator             go to state 67
    multiplicative_expression  go to state 166


State 128

   39 relational_expression: relational_expression LE_OP . additive_expression

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 164
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 167


State 129

   40 relational_expression: relational_expression GE_OP . additive_expression

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 164
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 168


State 130

   37 relational_expression: relational_expression '<' . additive_expression

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 164
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 169


State 131

   38 relational_expression: relational_expression '>' . additive_expression

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 164
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 170


State 132

   42 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 164
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    relational_expression      go to state 171


State 133

   43 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 164
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    relational_expression      go to state 172


State 134

   45 logical_and_expression: logical_and_expression AND_OP . equality_expression

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 164
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    relational_expression      go to state 70
    equality_expression        go to state 173


State 135

   47 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 164
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    relational_expression      go to state 70
    equality_expression        go to state 71
    logical_and_expression     go to state 174


State 136

   49 conditional_expression: logical_or_expression '?' . expression ':' conditional_expression

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 66
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    relational_expression      go to state 70
    equality_expression        go to state 71
    logical_and_expression     go to state 72
    logical_or_expression      go to state 73
    conditional_expression     go to state 74
    assignment_expression      go to state 92
    expression                 go to state 175


State 137

   61 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 61 (parameter_list)


State 138

   65 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 65 (identifier_list)


State 139

  102 selection_statement: IF '(' . expression ')' M compound_statement
  104                    | IF '(' . expression ')' M compound_statement ELSE $@2 compound_statement

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 66
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    relational_expression      go to state 70
    equality_expression        go to state 71
    logical_and_expression     go to state 72
    logical_or_expression      go to state 73
    conditional_expression     go to state 74
    assignment_expression      go to state 92
    expression                 go to state 176


State 140

  108 iteration_statement: WHILE $@3 . '(' expression ')' whileM $@4 compound_statement

    '('  shift, and go to state 177


State 141

  110 iteration_statement: DO $@5 . compound_statement WHILE '(' expression ')' ';'

    $default  reduce using rule 77 ($@1)

    compound_statement  go to state 178
    $@1                 go to state 24


State 142

  112 jump_statement: CONTINUE ';' .

    $default  reduce using rule 112 (jump_statement)


State 143

  113 jump_statement: BREAK ';' .

    $default  reduce using rule 113 (jump_statement)


State 144

  114 jump_statement: RETURN ';' .

    $default  reduce using rule 114 (jump_statement)


State 145

   59 expression: expression . ',' assignment_expression
  115 jump_statement: RETURN expression . ';'

    ','  shift, and go to state 146
    ';'  shift, and go to state 179


State 146

   59 expression: expression ',' . assignment_expression

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 66
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    relational_expression      go to state 70
    equality_expression        go to state 71
    logical_and_expression     go to state 72
    logical_or_expression      go to state 73
    conditional_expression     go to state 74
    assignment_expression      go to state 180


State 147

  101 expression_statement: expression ';' .

    $default  reduce using rule 101 (expression_statement)


State 148

   80 compound_statement_types: '{' statement_list '}' .

    $default  reduce using rule 80 (compound_statement_types)


State 149

   99 statement_list: statement_list statement .

    $default  reduce using rule 99 (statement_list)


State 150

  116 hashinclude: HASH INCLUDE '<' IDENTIFIER '.' H . '>' hashinclude

    '>'  shift, and go to state 181


State 151

   22 unary_expression: SIZEOF '(' type_specifier . ')'

    ')'  shift, and go to state 182


State 152

    7 primary_expression: '(' expression ')' .

    $default  reduce using rule 7 (primary_expression)


State 153

   68 initializer: '{' initializer_list ',' . '}'
   70 initializer_list: initializer_list ',' . initializer

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62
    '{'             shift, and go to state 63
    '}'             shift, and go to state 183

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 66
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    relational_expression      go to state 70
    equality_expression        go to state 71
    logical_and_expression     go to state 72
    logical_or_expression      go to state 73
    conditional_expression     go to state 74
    assignment_expression      go to state 75
    initializer                go to state 184


State 154

   67 initializer: '{' initializer_list '}' .

    $default  reduce using rule 67 (initializer)


State 155

   10 postfix_expression: postfix_expression '(' ')' .

    $default  reduce using rule 10 (postfix_expression)


State 156

   11 postfix_expression: postfix_expression '(' argument_expression_list . ')'
   16 argument_expression_list: argument_expression_list . ',' assignment_expression

    ')'  shift, and go to state 185
    ','  shift, and go to state 186


State 157

   15 argument_expression_list: assignment_expression .

    $default  reduce using rule 15 (argument_expression_list)


State 158

    9 postfix_expression: postfix_expression '[' expression . ']'
   59 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 187
    ','  shift, and go to state 146


State 159

   12 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 12 (postfix_expression)


State 160

   51 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 51 (assignment_expression)


State 161

   30 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 30 (multiplicative_expression)


State 162

   31 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 31 (multiplicative_expression)


State 163

   32 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 32 (multiplicative_expression)


State 164

   29 multiplicative_expression: unary_expression .

    $default  reduce using rule 29 (multiplicative_expression)


State 165

   30 multiplicative_expression: multiplicative_expression . '*' unary_expression
   31                          | multiplicative_expression . '/' unary_expression
   32                          | multiplicative_expression . '%' unary_expression
   34 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 123
    '/'  shift, and go to state 124
    '%'  shift, and go to state 125

    $default  reduce using rule 34 (additive_expression)


State 166

   30 multiplicative_expression: multiplicative_expression . '*' unary_expression
   31                          | multiplicative_expression . '/' unary_expression
   32                          | multiplicative_expression . '%' unary_expression
   35 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 123
    '/'  shift, and go to state 124
    '%'  shift, and go to state 125

    $default  reduce using rule 35 (additive_expression)


State 167

   34 additive_expression: additive_expression . '+' multiplicative_expression
   35                    | additive_expression . '-' multiplicative_expression
   39 relational_expression: relational_expression LE_OP additive_expression .

    '+'  shift, and go to state 126
    '-'  shift, and go to state 127

    $default  reduce using rule 39 (relational_expression)


State 168

   34 additive_expression: additive_expression . '+' multiplicative_expression
   35                    | additive_expression . '-' multiplicative_expression
   40 relational_expression: relational_expression GE_OP additive_expression .

    '+'  shift, and go to state 126
    '-'  shift, and go to state 127

    $default  reduce using rule 40 (relational_expression)


State 169

   34 additive_expression: additive_expression . '+' multiplicative_expression
   35                    | additive_expression . '-' multiplicative_expression
   37 relational_expression: relational_expression '<' additive_expression .

    '+'  shift, and go to state 126
    '-'  shift, and go to state 127

    $default  reduce using rule 37 (relational_expression)


State 170

   34 additive_expression: additive_expression . '+' multiplicative_expression
   35                    | additive_expression . '-' multiplicative_expression
   38 relational_expression: relational_expression '>' additive_expression .

    '+'  shift, and go to state 126
    '-'  shift, and go to state 127

    $default  reduce using rule 38 (relational_expression)


State 171

   37 relational_expression: relational_expression . '<' additive_expression
   38                      | relational_expression . '>' additive_expression
   39                      | relational_expression . LE_OP additive_expression
   40                      | relational_expression . GE_OP additive_expression
   42 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP  shift, and go to state 128
    GE_OP  shift, and go to state 129
    '<'    shift, and go to state 130
    '>'    shift, and go to state 131

    $default  reduce using rule 42 (equality_expression)


State 172

   37 relational_expression: relational_expression . '<' additive_expression
   38                      | relational_expression . '>' additive_expression
   39                      | relational_expression . LE_OP additive_expression
   40                      | relational_expression . GE_OP additive_expression
   43 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP  shift, and go to state 128
    GE_OP  shift, and go to state 129
    '<'    shift, and go to state 130
    '>'    shift, and go to state 131

    $default  reduce using rule 43 (equality_expression)


State 173

   42 equality_expression: equality_expression . EQ_OP relational_expression
   43                    | equality_expression . NE_OP relational_expression
   45 logical_and_expression: logical_and_expression AND_OP equality_expression .

    EQ_OP  shift, and go to state 132
    NE_OP  shift, and go to state 133

    $default  reduce using rule 45 (logical_and_expression)


State 174

   45 logical_and_expression: logical_and_expression . AND_OP equality_expression
   47 logical_or_expression: logical_or_expression OR_OP logical_and_expression .

    AND_OP  shift, and go to state 134

    $default  reduce using rule 47 (logical_or_expression)


State 175

   49 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression
   59 expression: expression . ',' assignment_expression

    ','  shift, and go to state 146
    ':'  shift, and go to state 188


State 176

   59 expression: expression . ',' assignment_expression
  102 selection_statement: IF '(' expression . ')' M compound_statement
  104                    | IF '(' expression . ')' M compound_statement ELSE $@2 compound_statement

    ')'  shift, and go to state 189
    ','  shift, and go to state 146


State 177

  108 iteration_statement: WHILE $@3 '(' . expression ')' whileM $@4 compound_statement

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 66
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    relational_expression      go to state 70
    equality_expression        go to state 71
    logical_and_expression     go to state 72
    logical_or_expression      go to state 73
    conditional_expression     go to state 74
    assignment_expression      go to state 92
    expression                 go to state 190


State 178

  110 iteration_statement: DO $@5 compound_statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 191


State 179

  115 jump_statement: RETURN expression ';' .

    $default  reduce using rule 115 (jump_statement)


State 180

   59 expression: expression ',' assignment_expression .

    $default  reduce using rule 59 (expression)


State 181

  116 hashinclude: HASH INCLUDE '<' IDENTIFIER '.' H '>' . hashinclude

    IDENTIFIER  shift, and go to state 1
    CHAR        shift, and go to state 2
    SHORT       shift, and go to state 3
    INT         shift, and go to state 4
    LONG        shift, and go to state 5
    FLOAT       shift, and go to state 6
    DOUBLE      shift, and go to state 7
    VOID        shift, and go to state 8
    HASH        shift, and go to state 9

    declaration           go to state 10
    type_specifier        go to state 11
    declarator            go to state 12
    hashinclude           go to state 192
    translation_unit      go to state 14
    external_declaration  go to state 15
    function_definition   go to state 16


State 182

   22 unary_expression: SIZEOF '(' type_specifier ')' .

    $default  reduce using rule 22 (unary_expression)


State 183

   68 initializer: '{' initializer_list ',' '}' .

    $default  reduce using rule 68 (initializer)


State 184

   70 initializer_list: initializer_list ',' initializer .

    $default  reduce using rule 70 (initializer_list)


State 185

   11 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $default  reduce using rule 11 (postfix_expression)


State 186

   16 argument_expression_list: argument_expression_list ',' . assignment_expression

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 66
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    relational_expression      go to state 70
    equality_expression        go to state 71
    logical_and_expression     go to state 72
    logical_or_expression      go to state 73
    conditional_expression     go to state 74
    assignment_expression      go to state 193


State 187

    9 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 9 (postfix_expression)


State 188

   49 conditional_expression: logical_or_expression '?' expression ':' . conditional_expression

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 164
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    relational_expression      go to state 70
    equality_expression        go to state 71
    logical_and_expression     go to state 72
    logical_or_expression      go to state 73
    conditional_expression     go to state 194


State 189

  102 selection_statement: IF '(' expression ')' . M compound_statement
  104                    | IF '(' expression ')' . M compound_statement ELSE $@2 compound_statement

    $default  reduce using rule 105 (M)

    M  go to state 195


State 190

   59 expression: expression . ',' assignment_expression
  108 iteration_statement: WHILE $@3 '(' expression . ')' whileM $@4 compound_statement

    ')'  shift, and go to state 196
    ','  shift, and go to state 146


State 191

  110 iteration_statement: DO $@5 compound_statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 197


State 192

  116 hashinclude: HASH INCLUDE '<' IDENTIFIER '.' H '>' hashinclude .

    $default  reduce using rule 116 (hashinclude)


State 193

   16 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 16 (argument_expression_list)


State 194

   49 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 49 (conditional_expression)


State 195

  102 selection_statement: IF '(' expression ')' M . compound_statement
  104                    | IF '(' expression ')' M . compound_statement ELSE $@2 compound_statement

    $default  reduce using rule 77 ($@1)

    compound_statement  go to state 198
    $@1                 go to state 24


State 196

  108 iteration_statement: WHILE $@3 '(' expression ')' . whileM $@4 compound_statement

    $default  reduce using rule 111 (whileM)

    whileM  go to state 199


State 197

  110 iteration_statement: DO $@5 compound_statement WHILE '(' . expression ')' ';'

    IDENTIFIER      shift, and go to state 47
    CONSTANT        shift, and go to state 48
    CHAR_CONSTANT   shift, and go to state 49
    INT_CONSTANT    shift, and go to state 50
    FLOAT_CONSTANT  shift, and go to state 51
    STRING_LITERAL  shift, and go to state 52
    SIZEOF          shift, and go to state 53
    INC_OP          shift, and go to state 54
    DEC_OP          shift, and go to state 55
    '('             shift, and go to state 56
    '&'             shift, and go to state 57
    '*'             shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '~'             shift, and go to state 61
    '!'             shift, and go to state 62

    primary_expression         go to state 64
    postfix_expression         go to state 65
    unary_expression           go to state 66
    unary_operator             go to state 67
    multiplicative_expression  go to state 68
    additive_expression        go to state 69
    relational_expression      go to state 70
    equality_expression        go to state 71
    logical_and_expression     go to state 72
    logical_or_expression      go to state 73
    conditional_expression     go to state 74
    assignment_expression      go to state 92
    expression                 go to state 200


State 198

  102 selection_statement: IF '(' expression ')' M compound_statement .
  104                    | IF '(' expression ')' M compound_statement . ELSE $@2 compound_statement

    ELSE  shift, and go to state 201

    $default  reduce using rule 102 (selection_statement)


State 199

  108 iteration_statement: WHILE $@3 '(' expression ')' whileM . $@4 compound_statement

    $default  reduce using rule 107 ($@4)

    $@4  go to state 202


State 200

   59 expression: expression . ',' assignment_expression
  110 iteration_statement: DO $@5 compound_statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 203
    ','  shift, and go to state 146


State 201

  104 selection_statement: IF '(' expression ')' M compound_statement ELSE . $@2 compound_statement

    $default  reduce using rule 103 ($@2)

    $@2  go to state 204


State 202

  108 iteration_statement: WHILE $@3 '(' expression ')' whileM $@4 . compound_statement

    $default  reduce using rule 77 ($@1)

    compound_statement  go to state 205
    $@1                 go to state 24


State 203

  110 iteration_statement: DO $@5 compound_statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 206


State 204

  104 selection_statement: IF '(' expression ')' M compound_statement ELSE $@2 . compound_statement

    $default  reduce using rule 77 ($@1)

    compound_statement  go to state 207
    $@1                 go to state 24


State 205

  108 iteration_statement: WHILE $@3 '(' expression ')' whileM $@4 compound_statement .

    $default  reduce using rule 108 (iteration_statement)


State 206

  110 iteration_statement: DO $@5 compound_statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 110 (iteration_statement)


State 207

  104 selection_statement: IF '(' expression ')' M compound_statement ELSE $@2 compound_statement .

    $default  reduce using rule 104 (selection_statement)
